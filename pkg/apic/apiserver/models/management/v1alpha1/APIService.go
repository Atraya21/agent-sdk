/*
 * This file is automatically generated
 */

package v1alpha1

import (
	"encoding/json"
	"fmt"

	apiv1 "github.com/Axway/agent-sdk/pkg/apic/apiserver/models/api/v1"
)

var (
	_APIServiceGVK = apiv1.GroupVersionKind{
		GroupKind: apiv1.GroupKind{
			Group: "management",
			Kind:  "APIService",
		},
		APIVersion: "v1alpha1",
	}
)

const (
	APIServiceScope = "Environment"

	APIServiceResource = "apiservices"
)

func APIServiceGVK() apiv1.GroupVersionKind {
	return _APIServiceGVK
}

func init() {
	apiv1.RegisterGVK(_APIServiceGVK, APIServiceScope, APIServiceResource)
}

// APIService Resource
type APIService struct {
	apiv1.ResourceMeta

	Spec ApiServiceSpec `json:"spec"`
}

// FromInstance converts a ResourceInstance to a APIService
func (res *APIService) FromInstance(ri *apiv1.ResourceInstance) error {
	if ri == nil {
		res = nil
		return nil
	}

	fmt.Println("APIService FromInstance: incoming Resource Instance before JSON marshal: ", ri)

	m, err := json.Marshal(ri.Spec)
	if err != nil {
		fmt.Errorf("APIService FromInstance: Error from JSON marshal ", err)
		return err
	}

	fmt.Println("APIService FromInstance: Resource Instance after JSON marshal & before JSON unmarshal: ", m)

	spec := &ApiServiceSpec{}
	err = json.Unmarshal(m, spec)
	if err != nil {
		fmt.Errorf("APIService FromInstance: Error from JSON unmarshal ", err)
		return err
	}

	fmt.Println("APIService FromInstance: Resource Instance after JSON unmarshal: ", spec)

	*res = APIService{ResourceMeta: ri.ResourceMeta, Spec: *spec}

	return err
}

// AsInstance converts a APIService to a ResourceInstance
func (res *APIService) AsInstance() (*apiv1.ResourceInstance, error) {
	fmt.Println("APIService AsInstance: incoming Resource Instance before JSON marshal: ", res)
	m, err := json.Marshal(res.Spec)
	if err != nil {
		fmt.Errorf("APIService AsInstance: Error from JSON marshal ", err)
		return nil, err
	}

	fmt.Println("APIService AsInstance: Resource Instance after JSON marshal & before JSON unmarshal: ", m)

	spec := map[string]interface{}{}
	err = json.Unmarshal(m, &spec)
	if err != nil {
		fmt.Errorf("APIService AsInstance: Error from JSON unmarshal ", err)
		return nil, err
	}

	fmt.Println("APIService AsInstance: Resource Instance after JSON unmarshal: ", spec)

	meta := res.ResourceMeta
	meta.GroupVersionKind = APIServiceGVK()

	return &apiv1.ResourceInstance{ResourceMeta: meta, Spec: spec}, nil
}
