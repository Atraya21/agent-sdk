image: docker:dind

############################################################
# Section for external includes
############################################################
include:
  - project: "apigov/beano_cicd"
    ref: master
    file: "/.gitlab-ci-config-ssh.yml"
  - project: "scurity/gitlabci"
    ref: master
    file: "/.gitlab-ci-prepcsr.yml"
  - project: "scurity/gitlabci"
    ref: master
    file: "/.gitlab-ci-fortify.yml"
  - project: "scurity/gitlabci"
    ref: master
    file: "/.gitlab-ci-dependencycheck.yml"
  - project: "scurity/gitlabci"
    ref: master
    file: "/.gitlab-ci-whitesource.yml"
  - project: "scurity/gitlabci"
    ref: master
    file: "/.gitlab-ci-csr.yml"

variables:
  GO111MODULE: "on"
  GOPRIVATE: "git.ecd.axway.org"
  GOFLAGS: "-mod=vendor"

  PROJECT: beano
  PACKAGE_NAME: apic-agents-sdk
  GIT_REPO_NAME: agent-sdk
  GIT_GOLANG_REPO_PATH: src/github.com/Axway
  BINTRAY_NAMESPACE: agent
  DOCKER_DRIVER: overlay2
  DEPENDENCY_CHECK_FLAGS: "--scan=**/* --exclude=**/*.zip --suppression=dc-suppressions.xml"
  AWS_DISCOVERY_PROJECT_ID: 7397
  V7_DISCOVERY_PROJECT_ID: 7540
  AZURE_DISCOVERY_PROJECT_ID: 8585
  FORTIFY_PROJECT: "10566"
  FORTIFY_BUILD_ID: "apic_agents_sdk"

  WS_CONFIG_FILE: "whitesource.config"
  WS_PROJECT_ID: "APIC_Agents_SDK"

stages:
  - test
  - sonar
  - security-scans
  - security-review
  - release
  - update-dep

############################################################
# Section for restrictions
############################################################
.except-feature: &except-feature
  only:
    - main
    - dev
    - tags
  except:
    - web
    - triggers

.only-feature: &only-feature
  except:
    - main
    - dev
    - web
    - triggers

.only-dev: &only-dev
  only:
    - dev
  except:
    - web
    - triggers

.only-protected: &only-protected
  only:
    - main
    - dev
  except:
    - web
    - triggers

.all: &all
  only:
    - main
    - dev
    - /^APIGOV-.*$/
  except:
    - web
    - triggers

.only-main: &only-main
  only:
    - main
  except:
    - web
    - triggers

.only-tags: &only-tags
  only:
    - tags

.only-release: &only-release
  only:
    - web
    - triggers

############################################################
# Section for build command scripts
############################################################
.get-latest-version: &get-latest-version |
  if [ $(git --version | grep -Eo '2.*') ]; then
    export PACKAGE_VERSION=$(git tag -l --sort="version:refname" | grep -Eo '[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}' | tail -1)
  else
    export PACKAGE_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
  fi

############################################################
# Section for test and sonar
############################################################
test:
  stage: test
  image: beano.swf-artifactory.lab.phx.axway.int/beano-alpine-security:latest
  script:
    - echo "GOPATH = ${GOPATH}"
    - echo "CIPROJECT_DIR = ${CI_PROJECT_DIR}"
    - echo "GIT_REPO_NAME = ${GIT_REPO_NAME}"
    - echo "GOLANG_REPO = ${GIT_REPO_NAME}"
    - make test
  <<: *only-feature

.sonar-template: &sonar-template
  image: beano.swf-artifactory.lab.phx.axway.int/beano-alpine-security:latest

sonar-preview:
  stage: test
  <<: *sonar-template
  script:
    - make sonar mode=preview
  allow_failure: true
  <<: *only-feature

sonar:
  stage: sonar
  <<: *sonar-template
  script:
    - make sonar
  allow_failure: true
  <<: *only-protected

############################################################
# Section for lint builds stage
############################################################
.lint-template: &lint-template
  image: beano.swf-artifactory.lab.phx.axway.int/beano-alpine-base:latest
  script:
    - make lint

lint-test:
  stage: test
  <<: *lint-template
  <<: *only-feature

lint-sonar:
  stage: sonar
  <<: *lint-template
  <<: *only-protected

############################################################
# Section for error check tools
############################################################
error_check:
  stage: test
  image: beano.swf-artifactory.lab.phx.axway.int/beano-alpine-security:latest
  script:
    - make error-check
  <<: *only-feature

dependencycheck:
  retry: 0
  except:
    - schedules
    - tags
    - web
    - triggers

whitesource:
  retry: 0
  except:
    - schedules
    - tags
    - web
    - triggers

fetch-fortify:
  retry: 0
  except:
    refs:
      - tags
      - web
      - triggers
    variables:
      - $CI_PIPELINE_SOURCE == "pipeline"

dependencycheck:on-schedule:
  retry: 0
  before_script:
    - git config --global http.sslVerify false
    - git fetch && git checkout master
    - *get-latest-version
    - if [[ ${PACKAGE_VERSION} =~ "0.0.1-" ]]; then echo "Scanning 0.0.1 thru master branch"; else echo "Checking out v${PACKAGE_VERSION}" && git checkout v${PACKAGE_VERSION}; fi

whitesource:on-schedule:
  retry: 0
  before_script:
    - git config --global http.sslVerify false
    - git fetch && git checkout master
    - *get-latest-version
    - if [[ ${PACKAGE_VERSION} =~ "0.0.1-" ]]; then echo "Scanning 0.0.1 thru master branch"; else echo "Checking out v${PACKAGE_VERSION}" && git checkout v${PACKAGE_VERSION}; fi

run-csr:
  dependencies:
    - fetch-fortify
    - dependencycheck
    - whitesource
  <<: *only-feature

update-csr:
  dependencies:
    - fetch-fortify
    - dependencycheck:on-schedule
    - whitesource:on-schedule

############################################################
# Section for triggering agent updates
############################################################
trigger-aws-apigw-discovery-agent:
  stage: update-dep
  when: manual
  extends: .config-artifactory
  before_script:
    - apk update && apk add curl ca-certificates
  script:
    - curl --request POST --form "token=${CI_JOB_TOKEN}" --form ref=master https://git.ecd.axway.org/api/v4/projects/${AWS_DISCOVERY_PROJECT_ID}/trigger/pipeline
  <<: *only-main

trigger-v7-discovery-agent:
  stage: update-dep
  when: manual
  extends: .config-artifactory
  before_script:
    - apk update && apk add curl ca-certificates
  script:
    - curl --request POST --form "token=${CI_JOB_TOKEN}" --form ref=master https://git.ecd.axway.org/api/v4/projects/${V7_DISCOVERY_PROJECT_ID}/trigger/pipeline
  <<: *only-main

trigger-azure-discovery-agent:
  stage: update-dep
  when: manual
  extends: .config-artifactory
  before_script:
    - apk update && apk add curl ca-certificates
  script:
    - curl --request POST --form "token=${CI_JOB_TOKEN}" --form ref=master https://git.ecd.axway.org/api/v4/projects/${AZURE_DISCOVERY_PROJECT_ID}/trigger/pipeline
  <<: *only-main
